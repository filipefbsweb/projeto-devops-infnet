name: Build and Deploy Cadastro

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

env:
  IMAGE_NAME: fbsweb/cadastro
  IMAGE_TAG: ${{ github.sha }}

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v2
      
    - name: Login to DockerHub
      if: github.event_name != 'pull_request'
      uses: docker/login-action@v2
      with:
        username: ${{ secrets.DOCKERHUB_USERNAME }}
        password: ${{ secrets.DOCKERHUB_TOKEN }}
        
    - name: Build and push Docker image
      uses: docker/build-push-action@v4
      with:
        context: .
        push: ${{ github.event_name != 'pull_request' }}
        tags: |
          ${{ env.IMAGE_NAME }}:${{ env.IMAGE_TAG }}
          ${{ env.IMAGE_NAME }}:latest
        cache-from: type=gha
        cache-to: type=gha,mode=max
        
    - name: Run tests
      run: |
        # Adicione aqui os comandos para executar testes na sua aplicação
        echo "Running tests..."
        
  deploy:
    needs: build
    if: github.event_name != 'pull_request'
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Set up kubeconfig
      uses: azure/k8s-set-context@v3
      with:
        kubeconfig: ${{ secrets.KUBE_CONFIG }}
        
    - name: Update Kubernetes resources
      run: |
        # Atualiza a imagem no manifesto
        sed -i "s|fbsweb/cadastro:1.0|fbsweb/cadastro:${{ env.IMAGE_TAG }}|g" cadastro-updated-deployment.yaml
        
    - name: Apply Kubernetes manifests
      run: |
        kubectl apply -f cadastro-updated-deployment.yaml
        kubectl apply -f cadastro-service.yaml
        kubectl apply -f k8s/grafana-deployment.yaml
        kubectl apply -f k8s/grafana-service.yaml
        kubectl apply -f k8s/prometheus-configmap.yaml
        kubectl apply -f k8s/prometheus-deployment.yaml
        kubectl apply -f k8s/prometheus-pvc.yaml
        kubectl apply -f k8s/prometheus-service.yaml
        kubectl apply -f stress-test/load-generator.yaml
        kubectl apply -f stress-test/load-test-job.yaml
        kubectl apply -f stress-test/stress-test.yaml
        kubectl rollout status deployment/cadastro-deploy
        
    - name: Verify deployment
      run: |
        echo "Verificando endpoints..."
        kubectl get endpoints
        
        echo "Verificando pods..."
        kubectl get pods -l app=cadastro